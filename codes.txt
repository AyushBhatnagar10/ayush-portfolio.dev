main.jsx
import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './App.jsx'
import './index.css'

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
)

app.jsx
import React, { useState, useEffect } from 'react';
import ThemeToggle from './components/ThemeToggle';
import Navigation from './components/Navigation';
import AnimatedBackground from './components/AnimatedBackground';
import Snowflakes from './components/Snowflakes';
import EasterEgg from './components/EasterEgg';
import Hero from './components/Hero';
import Skills from './components/Skills';
import Projects from './components/Projects';
import Experience from './components/Experience';
import Achievements from './components/Achievements';
import Contact from './components/Contact';

const App = () => {
  const [theme, setTheme] = useState('dark');
  
  const themeClasses = theme === 'dark' 
    ? 'bg-gradient-to-br from-gray-900 via-purple-900 to-violet-900 text-white'
    : 'bg-gradient-to-br from-slate-50 via-white to-blue-50 text-gray-900';

  // Intersection Observer for smooth section animations
  useEffect(() => {
    const observerOptions = {
      threshold: 0.15,
      rootMargin: '0px 0px -100px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add('visible');
        }
      });
    }, observerOptions);

    // Observe all sections
    const sections = document.querySelectorAll('section');
    sections.forEach((section) => {
      observer.observe(section);
    });

    return () => {
      sections.forEach((section) => {
        observer.unobserve(section);
      });
    };
  }, []);
  
  return (
    <div className={`min-h-screen font-mono transition-all duration-500 ${themeClasses}`} data-theme={theme}>
      <AnimatedBackground theme={theme} />
      <Snowflakes />
      <ThemeToggle theme={theme} setTheme={setTheme} />
      <Navigation theme={theme} />
      <EasterEgg />
      
      {/* Hero Section */}
      <section id="home" className="section-animate">
        <Hero theme={theme} />
      </section>
      
      {/* About Section */}
      <section id="about" className="px-6 py-20 relative z-20 section-animate">
        <div className="max-w-4xl mx-auto text-center">
          <h2 className={`text-4xl md:text-5xl font-bold mb-8 section-header animated-header ${
            theme === 'dark' 
              ? 'bg-gradient-to-r from-blue-400 to-purple-600 bg-clip-text text-transparent'
              : 'bg-gradient-to-r from-blue-600 to-indigo-800 bg-clip-text text-transparent'
          }`}>
            About Me
          </h2>
          <div className={`rounded-3xl p-8 shadow-2xl transform transition-all duration-700 hover:scale-105 ${
            theme === 'dark'
              ? 'bg-white/10 backdrop-blur-lg border border-white/20 hover:bg-white/15 hover:shadow-purple-500/30'
              : 'bg-white/70 backdrop-blur-lg border border-gray-200 shadow-xl hover:bg-white/90 hover:shadow-blue-500/30'
          }`}>
            <p className={`text-lg md:text-xl leading-relaxed mb-6 ${
              theme === 'dark' ? 'text-purple-200' : 'text-gray-700'
            }`}>
              Hey there! I'm Ayush Bhatnagar—aka Bhattu. I'm in my 3rd year of Integrated BTech CSE + MBA at Nirma University, Ahmedabad.
            </p>
            <p className={`text-lg md:text-xl leading-relaxed mb-6 ${
              theme === 'dark' ? 'text-purple-200' : 'text-gray-700'
            }`}>
              I'm passionate about building AI-driven solutions that solve real-world problems. With hands-on experience in Python, MySQL, and ML, 
              I've built apps like TradeFlow and cancer image analyzers through national hackathons. 
            </p>
            <p className={`text-lg md:text-xl leading-relaxed ${
              theme === 'dark' ? 'text-purple-200' : 'text-gray-700'
            }`}>
              A natural leader and communicator, I thrive in team settings, 
              love public speaking, and am currently exploring deeper into AI to gear up for impactful internships.
            </p>
          </div>
        </div>
      </section>
      
      <section id="skills" className="section-animate">
        <Skills theme={theme} />
      </section>
      
      <section id="projects" className="section-animate">
        <Projects theme={theme} />
      </section>
      
      <section id="experience" className="section-animate">
        <Experience theme={theme} />
      </section>
      
      <section id="achievements" className="section-animate">
        <Achievements theme={theme} />
      </section>
      
      <section id="contact" className="section-animate">
        <Contact theme={theme} />
      </section>
      
      {/* Footer */}
      <footer className={`py-8 text-center relative z-20 ${
        theme === 'dark' ? 'text-purple-300' : 'text-gray-600'
      }`}>
        <div className={`py-4 ${
          theme === 'dark' 
            ? 'bg-white/5 backdrop-blur-lg border-t border-white/10'
            : 'bg-white/30 backdrop-blur-lg border-t border-gray-200'
        }`}>
          <p>© {new Date().getFullYear()} Bhattu. All rights reserved.</p>
          <p className="text-sm mt-2">Built with ❤️ using React & Tailwind CSS</p>
        </div>
      </footer>
    </div>
  );
};

export default App;

index.css
@import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@300;400;500;600;700&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
}

body {
  font-family: 'JetBrains Mono', monospace;
  overflow-x: hidden;
}

.animate-fadeInUp {
  animation: fadeInUp 1s ease-out;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.text-gradient {
  background: linear-gradient(45deg, #8b5cf6, #ec4899, #ef4444);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

/* Smooth section transitions */
.section-animate {
  opacity: 0;
  transform: translateY(60px);
  transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.section-animate.visible {
  opacity: 1;
  transform: translateY(0);
}

/* Enhanced Section Header Animations */
.section-header {
  position: relative;
  overflow: hidden;
}

.animated-header {
  position: relative;
  display: inline-block;
  animation: headerGlow 3s ease-in-out infinite alternate;
}

.animated-header::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
  animation: shimmer 4s infinite;
}

.animated-header::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 50%;
  width: 0;
  height: 2px;
  background: linear-gradient(45deg, #8b5cf6, #ec4899);
  transform: translateX(-50%);
  animation: underlineGrow 2s ease-in-out infinite alternate;
}

@keyframes shimmer {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

@keyframes headerGlow {
  0% {
    filter: drop-shadow(0 0 5px rgba(139, 92, 246, 0.3));
  }
  100% {
    filter: drop-shadow(0 0 15px rgba(139, 92, 246, 0.6));
  }
}

@keyframes underlineGrow {
  0% {
    width: 20%;
  }
  100% {
    width: 80%;
  }
}

.glow-text {
  text-shadow: 0 0 10px currentColor, 0 0 20px currentColor, 0 0 30px currentColor;
  animation: glow-pulse 2s ease-in-out infinite alternate;
}

@keyframes glow-pulse {
  from {
    text-shadow: 0 0 5px currentColor, 0 0 10px currentColor, 0 0 15px currentColor;
  }
  to {
    text-shadow: 0 0 10px currentColor, 0 0 20px currentColor, 0 0 30px currentColor;
  }
}

/* Enhanced Timeline Styles */
.timeline {
  position: relative;
}

.timeline::before {
  content: '';
  position: absolute;
  left: 20px;
  top: 0;
  bottom: 0;
  width: 3px;
  background: linear-gradient(to bottom, #8b5cf6, #ec4899, #ef4444);
  border-radius: 3px;
  box-shadow: 0 0 10px rgba(139, 92, 246, 0.5);
  animation: timelinePulse 3s ease-in-out infinite;
}

@keyframes timelinePulse {
  0%, 100% {
    box-shadow: 0 0 10px rgba(139, 92, 246, 0.5);
  }
  50% {
    box-shadow: 0 0 20px rgba(139, 92, 246, 0.8);
  }
}

.timeline-item {
  position: relative;
  padding-left: 60px;
  margin-bottom: 40px;
  opacity: 0;
  transform: translateX(-30px);
  animation: slideInLeft 0.6s ease-out forwards;
}

.timeline-item:nth-child(even) {
  transform: translateX(30px);
  animation: slideInRight 0.6s ease-out forwards;
}

@keyframes slideInLeft {
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.timeline-dot {
  position: absolute;
  left: 10px;
  top: 24px;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: linear-gradient(45deg, #8b5cf6, #ec4899);
  border: 4px solid;
  box-shadow: 0 0 0 4px rgba(139, 92, 246, 0.2);
  animation: pulse-dot 2s infinite;
  z-index: 10;
}

@keyframes pulse-dot {
  0% {
    box-shadow: 0 0 0 4px rgba(139, 92, 246, 0.2);
    transform: scale(1);
  }
  50% {
    box-shadow: 0 0 0 12px rgba(139, 92, 246, 0.1);
    transform: scale(1.1);
  }
  100% {
    box-shadow: 0 0 0 4px rgba(139, 92, 246, 0.2);
    transform: scale(1);
  }
}

/* Light theme timeline */
.light-timeline::before {
  background: linear-gradient(to bottom, #3b82f6, #1d4ed8, #1e40af);
  box-shadow: 0 0 10px rgba(59, 130, 246, 0.5);
  animation: lightTimelinePulse 3s ease-in-out infinite;
}

@keyframes lightTimelinePulse {
  0%, 100% {
    box-shadow: 0 0 10px rgba(59, 130, 246, 0.5);
  }
  50% {
    box-shadow: 0 0 20px rgba(59, 130, 246, 0.8);
  }
}

.light-timeline-dot {
  background: linear-gradient(45deg, #3b82f6, #1d4ed8);
  box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.2);
  animation: pulse-dot-light 2s infinite;
}

@keyframes pulse-dot-light {
  0% {
    box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.2);
    transform: scale(1);
  }
  50% {
    box-shadow: 0 0 0 12px rgba(59, 130, 246, 0.1);
    transform: scale(1.1);
  }
  100% {
    box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.2);
    transform: scale(1);
  }
}

/* Enhanced Form hover effects */
.form-input {
  transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  position: relative;
  overflow: hidden;
}

.form-input::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  transition: left 0.6s ease;
  z-index: 1;
}

.form-input:hover::before {
  left: 100%;
}

.form-input:hover {
  transform: translateY(-3px) scale(1.01);
  box-shadow: 0 12px 35px rgba(0, 0, 0, 0.15);
}

.form-input:focus {
  transform: translateY(-3px) scale(1.01);
  box-shadow: 0 12px 35px rgba(0, 0, 0, 0.15);
}

/* Experience card hover effects */
.experience-card {
  transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  position: relative;
  overflow: hidden;
}

.experience-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(45deg, rgba(139, 92, 246, 0.1), rgba(236, 72, 153, 0.1));
  transition: left 0.6s ease;
  z-index: 0;
}

.experience-card:hover::before {
  left: 0;
}

.experience-card:hover {
  transform: translateY(-8px) scale(1.02);
}

/* Light theme specific styles */
.light-theme-card {
  background: rgba(255, 255, 255, 0.8) !important;
  border: 1px solid rgba(0, 0, 0, 0.1) !important;
  color: #374151 !important;
}

.light-theme-text {
  color: #374151 !important;
}

.light-theme-muted {
  color: #6b7280 !important;
}

.light-glass {
  background: rgba(255, 255, 255, 0.25);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.3);
}

/* Staggered animation delays for timeline items */
.timeline-item:nth-child(1) { animation-delay: 0.1s; }
.timeline-item:nth-child(2) { animation-delay: 0.2s; }
.timeline-item:nth-child(3) { animation-delay: 0.3s; }
.timeline-item:nth-child(4) { animation-delay: 0.4s; }
.timeline-item:nth-child(5) { animation-delay: 0.5s; }
.timeline-item:nth-child(6) { animation-delay: 0.6s; }

/* Project card animations */
.project-card {
  transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  position: relative;
  overflow: hidden;
}

.project-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(45deg, rgba(139, 92, 246, 0.05), rgba(236, 72, 153, 0.05));
  transition: left 0.5s ease;
  z-index: 0;
}

.project-card:hover::before {
  left: 0;
}

.project-card:hover {
  transform: translateY(-10px) scale(1.03);
}

/* Skills filter button animations */
.skill-filter-btn {
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

.skill-filter-btn::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.2) 0%, transparent 70%);
  transition: all 0.5s ease;
  transform: translate(-50%, -50%);
  border-radius: 50%;
}

.skill-filter-btn:hover::before {
  width: 300px;
  height: 300px;
}

index.html
<!doctype html>
<html lang="en">
  <head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Bhattu - Portfolio</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>

tailwind.config.cjs
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {
      fontFamily: {
        'mono': ['JetBrains Mono', 'monospace'],
      },
      animation: {
        'fadeInUp': 'fadeInUp 1s ease-out',
      },
      keyframes: {
        fadeInUp: {
          '0%': {
            opacity: '0',
            transform: 'translateY(30px)',
          },
          '100%': {
            opacity: '1',
            transform: 'translateY(0)',
          },
        },
      },
    },
  },
  plugins: [],
}

vite.config.cjs
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vite.dev/config/
export default defineConfig({
  plugins: [react()],
})

Achievements.jsx
import React from 'react';
import { Trophy } from 'lucide-react';
import { Medal } from 'lucide-react';
import { achievements } from '../data/portfolioData';

const Achievements = ({ theme }) => {
  return (
    <section id="achievements" className="px-6 py-20 relative z-20">
      <h2 className={`text-4xl md:text-5xl text-center font-bold mb-12 section-header glow-text ${
        theme === 'dark'
          ? 'bg-gradient-to-r from-orange-400 to-red-600 bg-clip-text text-transparent'
          : 'bg-gradient-to-r from-amber-600 to-orange-700 bg-clip-text text-transparent'
      }`}>
        Achievements
      </h2>
      <div className="max-w-6xl mx-auto grid grid-cols-2 md:grid-cols-4 gap-8">
        {achievements.map((a, i) => (
          <div key={i} className="flex flex-col items-center group hover:transform hover:scale-110 transition-all duration-300">
            <div className={`p-6 rounded-full mb-4 text-white shadow-lg ${
              theme === 'dark'
                ? 'bg-gradient-to-r from-yellow-500 to-orange-500 group-hover:shadow-yellow-500/50'
                : 'bg-gradient-to-r from-amber-500 to-orange-600 group-hover:shadow-amber-500/50'
            }`}>
              <Trophy className="w-8 h-8" />
            </div>
            <p className={`text-center font-semibold ${
              theme === 'dark' ? 'text-purple-200' : 'text-gray-800'
            }`}>{a.title}</p>
          </div>
        ))}
      </div>
    </section>
  );
};

export default Achievements;

Contact.jsx
import React, { useState } from 'react';
import { Mail, Github, Linkedin } from 'lucide-react';

const Contact = ({ theme }) => {
  const [form, setForm] = useState({ name: '', email: '', message: '' });
  
  const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });
  const handleSubmit = e => { 
    e.preventDefault(); 
    alert('Thanks! Message sent successfully!'); 
    setForm({ name: '', email: '', message: '' });
  };
  
  return (
    <section id="contact" className="px-6 py-20 relative z-20">
      <h2 className={`text-4xl md:text-5xl text-center font-bold mb-12 section-header glow-text ${
        theme === 'dark'
          ? 'bg-gradient-to-r from-pink-400 to-purple-600 bg-clip-text text-transparent'
          : 'bg-gradient-to-r from-rose-600 to-purple-700 bg-clip-text text-transparent'
      }`}>
        Contact Me
      </h2>
      <div className="max-w-2xl mx-auto">
        <div className={`rounded-3xl p-8 shadow-2xl border space-y-6 transition-all duration-300 ${
          theme === 'dark'
            ? 'bg-white/10 backdrop-blur-lg border-white/20'
            : 'bg-white/70 backdrop-blur-lg border-gray-200 shadow-xl'
        }`}>
          <form onSubmit={handleSubmit} className="space-y-6">
            <input 
              type="text" 
              name="name" 
              placeholder="Your Name" 
              value={form.name} 
              onChange={handleChange} 
              className={`form-input w-full p-4 border rounded-2xl focus:outline-none backdrop-blur-lg transition-all duration-300 ${
                theme === 'dark'
                  ? 'bg-white/10 border-purple-400/50 text-purple-200 placeholder-purple-300 focus:border-purple-400 hover:bg-white/15 hover:border-purple-300'
                  : 'bg-white/50 border-gray-300 text-gray-800 placeholder-gray-500 focus:border-blue-500 hover:bg-white/70 hover:border-blue-400'
              }`}
              required
            />
            <input 
              type="email" 
              name="email" 
              placeholder="Your Email" 
              value={form.email} 
              onChange={handleChange} 
              className={`form-input w-full p-4 border rounded-2xl focus:outline-none backdrop-blur-lg transition-all duration-300 ${
                theme === 'dark'
                  ? 'bg-white/10 border-purple-400/50 text-purple-200 placeholder-purple-300 focus:border-purple-400 hover:bg-white/15 hover:border-purple-300'
                  : 'bg-white/50 border-gray-300 text-gray-800 placeholder-gray-500 focus:border-blue-500 hover:bg-white/70 hover:border-blue-400'
              }`}
              required
            />
            <textarea 
              name="message" 
              placeholder="Your Message" 
              value={form.message} 
              onChange={handleChange} 
              className={`form-input w-full p-4 border rounded-2xl h-32 focus:outline-none backdrop-blur-lg resize-none transition-all duration-300 ${
                theme === 'dark'
                  ? 'bg-white/10 border-purple-400/50 text-purple-200 placeholder-purple-300 focus:border-purple-400 hover:bg-white/15 hover:border-purple-300'
                  : 'bg-white/50 border-gray-300 text-gray-800 placeholder-gray-500 focus:border-blue-500 hover:bg-white/70 hover:border-blue-400'
              }`}
              required
            />
            <button 
              type="submit"
              className={`w-full py-4 text-white rounded-2xl font-bold text-lg transition-all duration-300 transform hover:scale-105 shadow-lg ${
                theme === 'dark'
                  ? 'bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 hover:shadow-purple-500/50'
                  : 'bg-gradient-to-r from-blue-600 to-indigo-700 hover:from-blue-700 hover:to-indigo-800 hover:shadow-blue-500/50'
              }`}
            >
              Send Message
            </button>
          </form>
        </div>
        
        <div className="flex justify-center gap-6 mt-8">
          <a 
            href="mailto:ayushbhatnagar1299@gmail.com" 
            className={`p-4 rounded-full text-white hover:scale-110 transition-all duration-300 ${
              theme === 'dark'
                ? 'bg-gradient-to-r from-blue-500 to-purple-500 hover:shadow-blue-500/50'
                : 'bg-gradient-to-r from-blue-600 to-blue-700 hover:shadow-blue-500/50'
            }`}
          >
            <Mail size={24} />
          </a>
          <a 
            href="https://github.com/AyushBhatnagar10" 
            className={`p-4 rounded-full text-white hover:scale-110 transition-all duration-300 ${
              theme === 'dark'
                ? 'bg-gradient-to-r from-gray-700 to-gray-900 hover:shadow-gray-700/50'
                : 'bg-gradient-to-r from-gray-800 to-black hover:shadow-gray-800/50'
            }`}
          >
            <Github size={24} />
          </a>
          <a 
            href="https://www.linkedin.com/in/ayushbhatnagar2004/" 
            className={`p-4 rounded-full text-white hover:scale-110 transition-all duration-300 ${
              theme === 'dark'
                ? 'bg-gradient-to-r from-blue-600 to-blue-800 hover:shadow-blue-600/50'
                : 'bg-gradient-to-r from-blue-700 to-blue-900 hover:shadow-blue-700/50'
            }`}
          >
            <Linkedin size={24} />
          </a>
        </div>
      </div>
    </section>
  );
};

export default Contact;

EasterEgg.jsx
import React, { useEffect } from 'react';
import Swal from 'sweetalert2';

const sequence = ['ArrowUp','ArrowUp','ArrowDown','ArrowDown','ArrowLeft','ArrowRight','ArrowLeft','ArrowRight','b','a'];

const EasterEgg = () => {
  useEffect(() => {
    let idx = 0;
    const handler = e => {
      console.log(e.key,idx);
      if (e.key === sequence[idx]) {
        idx++;
        if (idx === sequence.length) {
          Swal.fire('Easter Egg!', 'You unlocked the secret terminal!', 'info');
          idx = 0;
        }
      } else idx = 0;
    };
    window.addEventListener('keydown', handler);
    return () => window.removeEventListener('keydown', handler);
  }, []);
  return null;
};

export default EasterEgg;

Snowflakes.jsx
import React, { useEffect } from 'react';

const Snowflakes = () => {
  useEffect(() => {
    const canvas = document.getElementById('snow-canvas');
    if (!canvas) return;
    
    const ctx = canvas.getContext('2d');
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    
    const snowflakes = [];
    const snowflakeCount = 100;
    
    for (let i = 0; i < snowflakeCount; i++) {
      snowflakes.push({
        x: Math.random() * canvas.width,
        y: Math.random() * canvas.height,
        size: Math.random() * 4 + 1,
        speed: Math.random() * 1 + 0.5,
        opacity: Math.random() * 0.8 + 0.2,
      });
    }
    
    function animateSnow() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      
      snowflakes.forEach(flake => {
        flake.y += flake.speed;
        
        if (flake.y > canvas.height) {
          flake.y = -10;
          flake.x = Math.random() * canvas.width;
        }
        
        ctx.beginPath();
        ctx.arc(flake.x, flake.y, flake.size, 0, Math.PI * 2);
        ctx.fillStyle = `rgba(255, 255, 255, ${flake.opacity})`;
        ctx.fill();
      });
      
      requestAnimationFrame(animateSnow);
    }
    
    animateSnow();
    
    const handleResize = () => {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    };
    
    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);
  
  return <canvas id="snow-canvas" className="fixed inset-0 pointer-events-none z-10" />;
};

export default Snowflakes;

AnimatedBackground.jsx
import React, { useEffect } from 'react';

const AnimatedBackground = ({ theme }) => {
  useEffect(() => {
    const canvas = document.getElementById('bg-canvas');
    if (!canvas) return;
    
    const ctx = canvas.getContext('2d');
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    
    const shapes = [];
    const shapeCount = theme === 'dark' ? 150 : 80;
    
    // Create shapes
    for (let i = 0; i < shapeCount; i++) {
      shapes.push({
        x: Math.random() * canvas.width,
        y: Math.random() * canvas.height,
        size: Math.random() * (theme === 'dark' ? 3 : 20) + (theme === 'dark' ? 1 : 10),
        speedX: (Math.random() - 0.5) * (theme === 'dark' ? 0.5 : 1),
        speedY: (Math.random() - 0.5) * (theme === 'dark' ? 0.5 : 1),
        opacity: Math.random() * (theme === 'dark' ? 0.5 : 0.3) + (theme === 'dark' ? 0.2 : 0.1),
        rotation: Math.random() * Math.PI * 2,
        rotationSpeed: (Math.random() - 0.5) * 0.02,
        type: theme === 'dark' ? 'circle' : ['circle', 'square', 'triangle'][Math.floor(Math.random() * 3)]
      });
    }
    
    function drawShape(shape) {
      ctx.save();
      ctx.translate(shape.x, shape.y);
      ctx.rotate(shape.rotation);
      
      if (shape.type === 'circle') {
        ctx.beginPath();
        ctx.arc(0, 0, shape.size, 0, Math.PI * 2);
        ctx.fillStyle = theme === 'dark' 
          ? `rgba(139, 69, 19, ${shape.opacity})` 
          : `rgba(99, 102, 241, ${shape.opacity})`;
        ctx.fill();
      } else if (shape.type === 'square') {
        ctx.fillStyle = `rgba(236, 72, 153, ${shape.opacity})`;
        ctx.fillRect(-shape.size/2, -shape.size/2, shape.size, shape.size);
      } else if (shape.type === 'triangle') {
        ctx.beginPath();
        ctx.moveTo(0, -shape.size/2);
        ctx.lineTo(-shape.size/2, shape.size/2);
        ctx.lineTo(shape.size/2, shape.size/2);
        ctx.closePath();
        ctx.fillStyle = `rgba(34, 197, 94, ${shape.opacity})`;
        ctx.fill();
      }
      
      ctx.restore();
    }
    
    function animate() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      
      shapes.forEach(shape => {
        // Update position
        shape.x += shape.speedX;
        shape.y += shape.speedY;
        shape.rotation += shape.rotationSpeed;
        
        // Wrap around edges
        if (shape.x > canvas.width + shape.size) shape.x = -shape.size;
        if (shape.x < -shape.size) shape.x = canvas.width + shape.size;
        if (shape.y > canvas.height + shape.size) shape.y = -shape.size;
        if (shape.y < -shape.size) shape.y = canvas.height + shape.size;
        
        drawShape(shape);
        
        // Draw connections only in dark mode
        if (theme === 'dark') {
          shapes.forEach(otherShape => {
            const dx = shape.x - otherShape.x;
            const dy = shape.y - otherShape.y;
            const distance = Math.sqrt(dx * dx + dy * dy);
            
            if (distance < 100) {
              ctx.beginPath();
              ctx.moveTo(shape.x, shape.y);
              ctx.lineTo(otherShape.x, otherShape.y);
              ctx.strokeStyle = `rgba(139, 69, 19, ${0.1 * (1 - distance / 100)})`;
              ctx.stroke();
            }
          });
        }
      });
      
      requestAnimationFrame(animate);
    }
    
    animate();
    
    const handleResize = () => {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    };
    
    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, [theme]);
  
  return <canvas id="bg-canvas" className="fixed inset-0 pointer-events-none" />;
};

export default AnimatedBackground;

Experience.jsx
import React from 'react';
import { Calendar, MapPin, Briefcase } from 'lucide-react';
import { experiences } from '../data/portfolioData';

const Experience = ({ theme }) => {
  // Sort experiences chronologically (oldest first)
  const sortedExperiences = [...experiences].sort((a, b) => {
    const dateA = new Date(a.date);
    const dateB = new Date(b.date);
    return dateA - dateB;
  });

  return (
    <section id="experience" className="px-6 py-20 relative z-20">
      <h2 className={`text-4xl md:text-5xl text-center font-bold mb-16 section-header animated-header glow-text ${
        theme === 'dark'
          ? 'bg-gradient-to-r from-cyan-400 to-blue-600 bg-clip-text text-transparent'
          : 'bg-gradient-to-r from-teal-600 to-blue-700 bg-clip-text text-transparent'
      }`}>
        Experience
      </h2>
      <div className="max-w-5xl mx-auto">
        <div className={`timeline ${theme === 'light' ? 'light-timeline' : ''}`}>
          {sortedExperiences.map((e, i) => (
            <div 
              key={i} 
              className={`timeline-item group`}
              style={{ animationDelay: `${i * 0.2}s` }}
            >
              <div 
                className={`${theme === 'light' ? 'light-timeline-dot border-blue-600' : 'timeline-dot border-purple-900'}`}
              />
              <div 
                className={`experience-card rounded-3xl p-8 shadow-2xl border-l-4 relative z-10 ${
                  theme === 'dark'
                    ? 'bg-white/10 backdrop-blur-lg border border-white/20 border-l-purple-500 hover:bg-white/20 hover:border-purple-400 hover:shadow-purple-500/40 hover:border-l-pink-500'
                    : 'bg-white/70 backdrop-blur-lg border border-gray-200 border-l-blue-600 shadow-xl hover:bg-white/95 hover:border-blue-400 hover:shadow-blue-500/40 hover:border-l-indigo-600'
                }`}
              >
                {/* Date Badge */}
                <div className="flex items-center justify-between mb-4">
                  <div className={`flex items-center gap-2 text-sm font-semibold px-4 py-2 rounded-full transition-all duration-300 ${
                    theme === 'dark' 
                      ? 'text-purple-300 bg-purple-500/20 group-hover:bg-purple-400/30 group-hover:text-purple-200 group-hover:shadow-lg group-hover:shadow-purple-500/20' 
                      : 'text-blue-600 bg-blue-100 group-hover:bg-blue-200 group-hover:text-blue-800 group-hover:shadow-lg group-hover:shadow-blue-500/20'
                  }`}>
                    <Calendar size={14} />
                    {e.date}
                  </div>
                  <div className={`p-2 rounded-full transition-all duration-300 ${
                    theme === 'dark'
                      ? 'bg-gradient-to-r from-purple-600/20 to-pink-600/20 group-hover:from-purple-500/30 group-hover:to-pink-500/30'
                      : 'bg-gradient-to-r from-blue-100 to-indigo-100 group-hover:from-blue-200 group-hover:to-indigo-200'
                  }`}>
                    <Briefcase size={16} className={
                      theme === 'dark' ? 'text-purple-400' : 'text-blue-600'
                    } />
                  </div>
                </div>

                {/* Content */}
                <div className="space-y-3">
                  <h3 className={`text-2xl font-bold transition-all duration-300 group-hover:scale-105 ${
                    theme === 'dark' 
                      ? 'text-purple-200 group-hover:text-white' 
                      : 'text-gray-800 group-hover:text-gray-900'
                  }`}>
                    {e.role}
                  </h3>
                  
                  <div className={`text-lg font-semibold transition-colors duration-300 ${
                    theme === 'dark' 
                      ? 'text-pink-400 group-hover:text-pink-300' 
                      : 'text-indigo-600 group-hover:text-indigo-800'
                  }`}>
                    @ {e.org}
                  </div>

                  <p className={`text-base leading-relaxed transition-colors duration-300 ${
                    theme === 'dark' 
                      ? 'text-purple-300 group-hover:text-purple-100' 
                      : 'text-gray-600 group-hover:text-gray-800'
                  }`}>
                    {e.desc}
                  </p>
                </div>

                {/* Animated bottom border */}
                <div className={`mt-6 h-1 w-0 rounded-full transition-all duration-700 group-hover:w-full ${
                  theme === 'dark'
                    ? 'bg-gradient-to-r from-purple-500 via-pink-500 to-red-500'
                    : 'bg-gradient-to-r from-blue-500 via-indigo-600 to-purple-600'
                }`} />

                {/* Floating icons on hover */}
                <div className="absolute top-4 right-4 flex gap-2 opacity-0 group-hover:opacity-100 transition-all duration-300 transform group-hover:scale-110">
                  <div className={`w-2 h-2 rounded-full animate-bounce ${
                    theme === 'dark' ? 'bg-purple-400' : 'bg-blue-500'
                  }`} style={{ animationDelay: '0s' }} />
                  <div className={`w-2 h-2 rounded-full animate-bounce ${
                    theme === 'dark' ? 'bg-pink-400' : 'bg-indigo-500'
                  }`} style={{ animationDelay: '0.1s' }} />
                  <div className={`w-2 h-2 rounded-full animate-bounce ${
                    theme === 'dark' ? 'bg-red-400' : 'bg-purple-500'
                  }`} style={{ animationDelay: '0.2s' }} />
                </div>

                {/* Hover overlay effect */}
                <div className={`absolute inset-0 rounded-3xl opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none ${
                  theme === 'dark'
                    ? 'bg-gradient-to-br from-purple-500/10 via-pink-500/10 to-transparent'
                    : 'bg-gradient-to-br from-blue-500/10 via-indigo-500/10 to-transparent'
                }`} />
              </div>
            </div>
          ))}
        </div>

        {/* Connection dots animation */}
        <div className="flex justify-center mt-8">
          <div className="flex space-x-2">
            {sortedExperiences.map((_, i) => (
              <div
                key={i}
                className={`w-2 h-2 rounded-full transition-all duration-300 ${
                  theme === 'dark'
                    ? 'bg-purple-500 hover:bg-pink-500'
                    : 'bg-blue-500 hover:bg-indigo-600'
                }`}
                style={{
                  animation: `pulse 2s infinite ${i * 0.2}s`
                }}
              />
            ))}
          </div>
        </div>
      </div>
    </section>
  );
};

export default Experience;

Hero.jsx
import React from 'react';
import TypingAnimation from './TypingAnimation';

const Hero = ({ theme }) => {
  const handleScroll = (e, targetId) => {
    e.preventDefault();
    const element = document.getElementById(targetId);
    if (element) {
      element.scrollIntoView({ 
        behavior: 'smooth',
        block: 'start'
      });
    }
  };

  return (
    <section className="relative min-h-screen flex flex-col justify-center items-center text-center px-4 z-20">
      <div className="animate-fadeInUp">
        <h1 className={`text-4xl md:text-7xl font-bold mb-6 animate-pulse ${
          theme === 'dark'
            ? 'bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 bg-clip-text text-transparent'
            : 'bg-gradient-to-r from-blue-600 via-indigo-700 to-purple-800 bg-clip-text text-transparent'
        }`}>
          Hi, I'm <span className={
            theme === 'dark' 
              ? 'bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 bg-clip-text text-transparent'
              : 'bg-gradient-to-r from-orange-600 via-red-600 to-pink-700 bg-clip-text text-transparent'
          }>Bhattu</span>
        </h1>
        <div className="text-xl md:text-2xl mb-8 h-16">
          <TypingAnimation 
            texts={[
              'I build smart models 💻',
              'I love finance 📈', 
              'I am a leader 🏆',
              'I bring tech & biz together ⚡'
            ]}
            className={theme === 'dark' ? 'text-purple-300' : 'text-indigo-700'}
            theme={theme}
          />
        </div>
        <div className="flex gap-4 justify-center flex-wrap">
          <a 
            href="#projects" 
            onClick={(e) => handleScroll(e, 'projects')}
            className={`px-8 py-3 text-white rounded-full transition-all duration-300 transform hover:scale-105 shadow-lg ${
              theme === 'dark'
                ? 'bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600'
                : 'bg-gradient-to-r from-blue-600 to-indigo-700 hover:from-blue-700 hover:to-indigo-800'
            }`}
          >
            View Projects
          </a>
          <button 
            onClick={() => window.open('/Ayush Resume.pdf', '_blank')}
            className={`px-8 py-3 border-2 rounded-full transition-all duration-300 transform hover:scale-105 ${
              theme === 'dark'
                ? 'border-purple-500 text-purple-400 hover:bg-purple-500 hover:text-white'
                : 'border-indigo-600 text-indigo-700 hover:bg-indigo-600 hover:text-white'
            }`}
          >
            Download Resume
          </button>
        </div>
      </div>
    </section>
  );
};

export default Hero;
TypingAnimation.jsx
import React, { useState, useEffect } from 'react';

const TypingAnimation = ({ texts, className, theme }) => {
  const [currentText, setCurrentText] = useState('');
  const [currentIndex, setCurrentIndex] = useState(0);
  const [isDeleting, setIsDeleting] = useState(false);
  
  useEffect(() => {
    const timeout = setTimeout(() => {
      const current = texts[currentIndex];
      
      if (isDeleting) {
        setCurrentText(current.substring(0, currentText.length - 1));
      } else {
        setCurrentText(current.substring(0, currentText.length + 1));
      }
      
      if (!isDeleting && currentText === current) {
        setTimeout(() => setIsDeleting(true), 1500);
      } else if (isDeleting && currentText === '') {
        setIsDeleting(false);
        setCurrentIndex((prev) => (prev + 1) % texts.length);
      }
    }, isDeleting ? 50 : 100);
    
    return () => clearTimeout(timeout);
  }, [currentText, currentIndex, isDeleting, texts]);
  
  return (
    <span className={className}>
      {currentText}
      <span className={`animate-pulse ${theme === 'dark' ? 'text-purple-400' : 'text-indigo-600'}`}>|</span>
    </span>
  );
};

export default TypingAnimation;

Projects.jsx
import React from 'react';
import { ExternalLink } from 'lucide-react';
import { projects } from '../data/portfolioData';

const Projects = ({ theme }) => {
  return (
    <section id="projects" className="px-6 py-20 relative z-20">
      <h2 className={`text-4xl md:text-5xl text-center font-bold mb-12 section-header glow-text ${
        theme === 'dark'
          ? 'bg-gradient-to-r from-yellow-400 to-red-600 bg-clip-text text-transparent'
          : 'bg-gradient-to-r from-orange-600 to-red-700 bg-clip-text text-transparent'
      }`}>
        Projects
      </h2>
      <div className="max-w-7xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {projects.map((project, idx) => (
          <div
            key={idx}
            className={`rounded-3xl p-6 shadow-2xl border hover:transform hover:scale-105 transition-all duration-300 ${
              theme === 'dark'
                ? 'bg-white/10 backdrop-blur-lg border-white/20 hover:shadow-purple-500/25'
                : 'bg-white/70 backdrop-blur-lg border-gray-200 hover:shadow-blue-500/25 shadow-xl'
            }`}
          >
            <img src={project.image} alt={project.title} className="w-full h-48 object-cover mb-4 rounded-2xl" />
            <h3 className={`text-2xl font-bold mb-3 ${
              theme === 'dark' ? 'text-purple-200' : 'text-gray-800'
            }`}>{project.title}</h3>
            <p className={`mb-4 ${
              theme === 'dark' ? 'text-purple-300' : 'text-gray-600'
            }`}>{project.description}</p>
            <div className="flex flex-wrap gap-2 mb-6">
              {project.tech.map((t, i) => (
                <span 
                  key={i} 
                  className={`text-xs px-3 py-1 rounded-full text-white font-semibold ${
                    theme === 'dark'
                      ? 'bg-gradient-to-r from-purple-600 to-pink-600'
                      : 'bg-gradient-to-r from-blue-600 to-indigo-700'
                  }`}
                >
                  {t}
                </span>
              ))}
            </div>
            <a
              href={project.link}
              target="_blank"
              className={`inline-flex items-center gap-2 font-semibold transition-colors ${
                theme === 'dark'
                  ? 'text-purple-400 hover:text-purple-300'
                  : 'text-blue-600 hover:text-blue-800'
              }`}
              rel="noopener noreferrer"
            >
              View Project <ExternalLink size={16} />
            </a>
          </div>
        ))}
      </div>
    </section>
  );
};

export default Projects;

Skills.jsx
import React, { useState } from 'react';
import { skills } from '../data/portfolioData';

const Skills = ({ theme }) => {
  const [filter, setFilter] = useState('all');
  const filtered = filter === 'all' ? skills : skills.filter(s => s.type === filter);
  
  return (
    <section id="skills" className="px-6 py-20 relative z-20">
      <h2 className={`text-4xl md:text-5xl text-center font-bold mb-12 section-header glow-text ${
        theme === 'dark'
          ? 'bg-gradient-to-r from-green-400 to-blue-600 bg-clip-text text-transparent'
          : 'bg-gradient-to-r from-emerald-600 to-blue-700 bg-clip-text text-transparent'
      }`}>
        Skills
      </h2>
      <div className="max-w-6xl mx-auto">
        <div className="flex flex-wrap justify-center gap-4 mb-8">
          {['all','frontend','backend','database','ml','tools','language'].map(f => (
            <button 
              key={f} 
              onClick={() => setFilter(f)} 
              className={`px-6 py-3 rounded-full border-2 transition-all duration-300 transform hover:scale-105 ${
                filter === f
                  ? theme === 'dark'
                    ? 'bg-gradient-to-r from-purple-500 to-pink-500 text-white border-purple-500'
                    : 'bg-gradient-to-r from-blue-600 to-indigo-700 text-white border-blue-600'
                  : theme === 'dark'
                    ? 'border-purple-400 text-purple-400 hover:bg-purple-500 hover:text-white'
                    : 'border-indigo-600 text-indigo-700 hover:bg-indigo-600 hover:text-white'
              }`}
            >
              {f.charAt(0).toUpperCase() + f.slice(1)}
            </button>
          ))}
        </div>
        <div className="flex flex-wrap justify-center gap-4">
          {filtered.map(skill => (
            <span 
              key={skill.name} 
              className={`px-6 py-3 backdrop-blur-lg border rounded-full font-semibold hover:scale-110 transition-transform duration-300 ${
                theme === 'dark'
                  ? 'bg-gradient-to-r from-blue-500/20 to-purple-500/20 border-blue-400/30 text-blue-200'
                  : 'bg-gradient-to-r from-blue-100 to-indigo-100 border-blue-300 text-blue-800'
              }`}
            >
              {skill.name}
            </span>
          ))}
        </div>
      </div>
    </section>
  );
};

export default Skills;

ThemeToggle.jsx
import React from 'react';
import { Moon, Sun } from 'lucide-react';

const ThemeToggle = ({ theme, setTheme }) => (
  <button
    onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}
    className="fixed top-24 right-4 z-50 p-3 rounded-full bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white shadow-lg transition-all duration-300 hover:scale-110"
  >
    {theme === 'dark' ? <Sun size={20} /> : <Moon size={20} />}
  </button>
);

export default ThemeToggle;

portfolioData.js
export const skills = [
  { name: 'React', type: 'frontend' },
  { name: 'Tailwind', type: 'frontend' },
  { name: 'SQL', type: 'database' },
  { name: 'Python', type: 'ml' },
  { name: 'TensorFlow', type: 'ml' },
  { name: 'Flask', type: 'backend' },
  { name: 'JavaScript', type: 'backend' },
  { name: 'Git', type: 'tools' },
  { name: 'JAVA', type: 'language' },
  { name: 'C', type: 'language' },
  { name: 'C++', type: 'language' },
];

export const projects = [
  {
    title: 'Stock Price Predictor',
    description: 'Comprehensive financial application that provides personalized stock recommendations, market insights, and financial education for users. Powered by AI and real-time market data.',
    tech: ['Python', 'Flask', 'yfinance', 'Gemini API', 'Flutter'],
    link: 'https://github.com/Vruxak21/TradeFlow',
    image: 'stock.gif',
  },
  {
    title: 'MobiMeds',
    description: 'The Mobimeds application is a simple desktop-based pharmacy management system implemented using Python Tkinter for the graphical user interface and PIL (Pillow) for image processing.',
    tech: ['Pillow', 'Tkinter', 'Python', 'MySQL'],
    link: 'https://github.com/AyushBhatnagar10/mobimeds',
    image: 'pharmacy.gif',
  },
  {
    title: 'Breast Cancer Detection',
    description: 'AI-powered diagnostic tool with 81% accuracy for early cancer detection.',     
    tech: ['Python', 'TensorFlow', 'React','OpenCV', 'KNN'],
    link: '#',
    image: 'cancer.gif',
  }, 
  {
    title: 'Analog-to-Analog Line Coding Simulator',
    description: 'An interactive web-based simulator for visualizing different signal modulation techniques: Amplitude Modulation (AM), Frequency Modulation (FM), and Phase Modulation (PM).',
    tech: ['HTML', 'CSS', 'JavaScript'],
    link: 'https://github.com/AyushBhatnagar10/Analog-Signal-Modulation',
    image: 'signal.gif',
  },
];

export const experiences = [
  { date: 'April 2023', role: 'Social Intern', org: 'Parevda Group', desc: 'Managed community projects and tech outreach.' },
  { date: 'September 2024', role: 'Team Leader', org: 'Smart India Hackathon 2024', desc: 'Led a team to develop a real-time tracking system using ML.' },
  { date: 'January 2025', role: 'Team Member', org: 'Google Solutions Challenge 2025', desc: 'Developed a Stock Analyzer and Helper app for increasing financial literacy in India' },
  { date: '2025', role: 'Team Leader', org: 'CSI HackNUthon 2025', desc: 'Developed a breast cancer detection website, with 81% accuracy' },
];

export const achievements = [
  { title: 'SIH 2024 Qualified Regional Level', icon: 'trophy' },
  { title: 'Google Solutions Challenge 2025 Participant', icon: 'trophy' },
  { title: 'HackNUthon 6.0 Participant', icon: 'trophy' },
];

Navigation.jsx
import React, { useState, useEffect } from 'react';
import { Menu, X } from 'lucide-react';

const Navigation = ({ theme }) => {
  const [isOpen, setIsOpen] = useState(false);
  const [activeSection, setActiveSection] = useState('home');

  const navItems = [
    { id: 'home', label: 'Home', href: '#home' },
    { id: 'about', label: 'About', href: '#about' },
    { id: 'skills', label: 'Skills', href: '#skills' },
    { id: 'projects', label: 'Projects', href: '#projects' },
    { id: 'experience', label: 'Experience', href: '#experience' },
    { id: 'achievements', label: 'Achievements', href: '#achievements' },
    { id: 'contact', label: 'Contact', href: '#contact' },
  ];

  // Handle smooth scrolling
  const handleClick = (e, href) => {
    e.preventDefault();
    const targetId = href.replace('#', '');
    const element = document.getElementById(targetId);
    if (element) {
      element.scrollIntoView({ 
        behavior: 'smooth',
        block: 'start'
      });
    }
    setIsOpen(false);
  };

  // Track active section on scroll
  useEffect(() => {
    const handleScroll = () => {
      const sections = navItems.map(item => item.id);
      const scrollPosition = window.scrollY + 100;

      for (let i = sections.length - 1; i >= 0; i--) {
        const section = document.getElementById(sections[i]);
        if (section && section.offsetTop <= scrollPosition) {
          setActiveSection(sections[i]);
          break;
        }
      }
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  return (
    <>
      {/* Desktop Navigation */}
      <nav className={`fixed top-0 left-0 right-0 z-40 transition-all duration-300 ${
        theme === 'dark'
          ? 'bg-gray-900/80 backdrop-blur-lg border-b border-white/10'
          : 'bg-white/80 backdrop-blur-lg border-b border-gray-200/50'
      }`}>
        <div className="max-w-7xl mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            {/* Logo */}
            <div className={`text-2xl font-bold ${
              theme === 'dark'
                ? 'bg-gradient-to-r from-purple-400 to-pink-500 bg-clip-text text-transparent'
                : 'bg-gradient-to-r from-blue-600 to-indigo-700 bg-clip-text text-transparent'
            }`}>
              Bhattu
            </div>

            {/* Desktop Menu */}
            <div className="hidden md:flex items-center space-x-8">
              {navItems.map((item) => (
                <a
                  key={item.id}
                  href={item.href}
                  onClick={(e) => handleClick(e, item.href)}
                  className={`relative transition-all duration-300 hover:scale-105 ${
                    activeSection === item.id
                      ? theme === 'dark'
                        ? 'text-purple-400 font-semibold'
                        : 'text-blue-600 font-semibold'
                      : theme === 'dark'
                        ? 'text-gray-300 hover:text-purple-300'
                        : 'text-gray-700 hover:text-blue-600'
                  }`}
                >
                  {item.label}
                  {activeSection === item.id && (
                    <div className={`absolute -bottom-1 left-0 right-0 h-0.5 rounded-full ${
                      theme === 'dark'
                        ? 'bg-gradient-to-r from-purple-400 to-pink-500'
                        : 'bg-gradient-to-r from-blue-600 to-indigo-700'
                    }`} />
                  )}
                </a>
              ))}
            </div>

            {/* Mobile Menu Button */}
            <button
              onClick={() => setIsOpen(!isOpen)}
              className={`md:hidden p-2 rounded-lg transition-colors ${
                theme === 'dark'
                  ? 'text-gray-300 hover:text-purple-400 hover:bg-white/10'
                  : 'text-gray-700 hover:text-blue-600 hover:bg-gray-100'
              }`}
            >
              {isOpen ? <X size={24} /> : <Menu size={24} />}
            </button>
          </div>
        </div>

        {/* Mobile Menu */}
        <div className={`md:hidden transition-all duration-300 overflow-hidden ${
          isOpen ? 'max-h-96 opacity-100' : 'max-h-0 opacity-0'
        }`}>
          <div className={`px-6 py-4 space-y-4 ${
            theme === 'dark'
              ? 'bg-gray-900/95 backdrop-blur-lg border-t border-white/10'
              : 'bg-white/95 backdrop-blur-lg border-t border-gray-200/50'
          }`}>
            {navItems.map((item) => (
              <a
                key={item.id}
                href={item.href}
                onClick={(e) => handleClick(e, item.href)}
                className={`block py-2 px-4 rounded-lg transition-all duration-300 ${
                  activeSection === item.id
                    ? theme === 'dark'
                      ? 'bg-gradient-to-r from-purple-500/20 to-pink-500/20 text-purple-400 font-semibold'
                      : 'bg-gradient-to-r from-blue-100 to-indigo-100 text-blue-600 font-semibold'
                    : theme === 'dark'
                      ? 'text-gray-300 hover:text-purple-300 hover:bg-white/5'
                      : 'text-gray-700 hover:text-blue-600 hover:bg-gray-50'
                }`}
              >
                {item.label}
              </a>
            ))}
          </div>
        </div>
      </nav>

      {/* Spacer to prevent content from hiding behind fixed nav */}
      <div className="h-20"></div>
    </>
  );
};

export default Navigation;
